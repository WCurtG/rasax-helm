#!/bin/bash

set -e

boolean() {
  case $1 in
    true) echo true ;;
    false) echo false ;;
    *) echo "Err: Unknown boolean value \"$1\"" 1>&2; exit 1 ;;
   esac
}

INSTALLER_DEBUG_MODE=$(boolean "${INSTALLER_DEBUG_MODE:-false}")

# The script can either use `wget` or `curl` to pull other scripts
DOWNLOADER=

if $INSTALLER_DEBUG_MODE
then
  set +x
  REDIRECT=/dev/stdout
else
  REDIRECT=/dev/null
fi

# Helper functions
echo_success() {
  echo -e "\e[32m${1}\e[0m"
}

echo_bold() {
  echo -e "\e[1m${1}\e[0m"
}

fatal() {
  echo "$@" >&2
  exit 1
}

seperator() {
  yes = | head -n$(($(tput cols) * 1)) | tr -d '\n'
  printf "\n \n $($1 "$2") \n \n"
  yes = | head -n$(($(tput cols) * 1)) | tr -d '\n'
}

install_snapd () {
    sudo apt install snapd -y > ${REDIRECT} &&
    seperator "snapd has been installed"
    seperator echo_success "snapd has been installed" || seperator echo_bold "snapd install failed" 
}

install_microk8s () {
    sudo snap install microk8s --classic && 
    seperator echo_success "microk8s has been installed" || seperator echo_bold "microk8s install failed" &&
    sudo usermod -a -G microk8s $USER &&
    sudo chown -f -R $USER ~/.kube &&
    seperator echo_success "microk8s setting up" || seperator echo_bold "microk8s set up failed" &&
    sudo su - $USER & 
    seperator echo_success "re-entered the session for the group update" || seperator echo_bold "re-enter failed" &&
    microk8s status --wait-ready && 
    seperator echo_success "microk8s ready" || seperator echo_bold "microk8s not ready" &&
    microk8s enable dns storage helm3 registry dashboard ingress > ${REDIRECT} &&
    seperator echo_success "microk8s add-ons ready" || seperator echo_bold "microk8s add-ons not ready" &&
    cd $HOME/.kube &&
    microk8s config > config &&
    seperator echo_success "microk8s configured" || seperator echo_bold "microk8s not configured"
}

install_microk8s
seperator echo_success "Process Successful"